/*@ATTRIBUTE@block_name@Crear álbum de figus@*/
procedure CrearÁlbumDeFigus() {
    if (aux_álbumCreado()) {
        BOOM("Ya creaste el álbum. No podés crear otro.")
    }
    Mover(Sur)
    repeat (5) {
        Poner(Verde)
        Poner(Azul)
        Mover(Este)
    }
    Poner(Verde)
    Poner(Azul)
    Mover(Norte)
    repeat (5) {
        Mover(Oeste)
    }
}

procedure CrearContadorDeFigus() {
    if (aux_contadorCreado()) {
        BOOM("Ya creaste el contador. No podés crear otro.")
    }
    IrAlBorde(Este)
    Poner(Azul)
    Mover(Oeste)
    Poner(Negro)
    Poner(Negro)
    Poner(Negro)
    Mover(Oeste)
    Poner(Negro)
    Poner(Negro)
    IrAlBorde(Oeste)
}

function aux_listaRandom() {
    return([2, 0, 4, 0, 2, 1, 2, 4, 3, 4,
            0, 0, 2, 4, 5, 4, 2, 4, 4, 2,
            0, 4, 2, 4, 3, 4, 2, 1, 0, 5,
            1, 1, 0, 4, 3, 2, 4, 5, 2, 2,
            0, 4, 2, 3, 0, 5, 3, 1, 0, 2,
            1, 4, 1, 2, 3, 3, 1, 5, 0, 0,
            0, 3, 1, 2, 0, 2, 1, 1, 5, 0,
            5, 3, 3, 0, 1, 4, 4, 5, 0, 4,
            1, 5, 1, 3, 0, 5, 1, 5, 5, 2,
            5, 2, 2, 5, 2, 4, 3, 4, 0, 0,
            5, 3, 1, 1, 5, 0, 5, 1, 5, 4,
            4, 4, 4, 3, 3, 5, 4, 3, 2, 3,
            2, 1, 2, 0, 1, 5, 2, 5, 0, 1,
            4, 5, 0, 1, 0, 2, 2, 4, 4, 0,
            5, 2, 0, 5, 5, 1, 2, 5, 1, 1,
            1, 1, 4, 0, 1, 4, 0, 0, 3, 5,
            2, 4, 4, 1, 3, 3, 5, 2, 1, 3,
            2, 0, 5, 0, 2, 4, 0, 4, 4, 5,
            4, 4, 5, 3, 0, 1, 2, 3, 0, 0,
            1, 3, 4, 1, 5, 0, 3, 5, 4, 1])
}

function aux_random() {
    n := nroBolitas(Rojo) mod 200
    lista := aux_listaRandom()
    repeat (n) {
        lista := resto(lista)
    }
    return (primero(lista))
}

procedure Aux_random() {
    while(nroBolitas(Rojo) > 500) {
        repeat(300) {
          Sacar(Rojo)
        }
    }
    Poner(Rojo)
}

procedure ComprarFigu() {
    if (aux_hayFigu()) {
        BOOM("Ya compraste una figu. Sólo podés comprar una figu al mismo tiempo. Pegala o descartala antes de comprar otra.")
    }
    Aux_random()
    n := aux_random()
    Mover(Este)
    Mover(Este)
    repeat(n+1) {
        Poner(Verde)
    }
    Mover(Oeste)
    Mover(Oeste)
}

procedure PegarFigu() {
    if (not aux_hayFigu()) {
        BOOM("No tenés ninguna figu para pegar. Primero comprá alguna.")
    }
    if (not aux_álbumCreado()) {
        BOOM("No se puede pegar la figu porque todavía no creaste el álbum.")
    }
    if (aux_esFiguRepetida()) {
        Aux_DescartarFigu()
    } else {
        Mover(Este)
        Mover(Este)
        n := nroBolitas(Verde)
        repeat(n) {
            Sacar(Verde)
        }
        Mover(Oeste)
        Mover(Oeste)
        Mover(Sur)
        repeat(n-1) {
            Mover(Este)
        }
        if (hayBolitas(Azul)) {
            Sacar(Azul)
            repeat(n-1) {
                Poner(Verde)
            }
        }
        IrAlBorde(Norte)
        IrAlBorde(Oeste)
    }
}

procedure Aux_DescartarFigu() {
    if (not aux_hayFigu()) {
        BOOM("No tenés ninguna figu para descartar. Primero comprá alguna.")
    }
    Mover(Este)
    Mover(Este)
    repeat(nroBolitas(Verde)) {
        Sacar(Verde)
    }
    Mover(Oeste)
    Mover(Oeste)
}

procedure AumentarContador() {
    if (not aux_contadorCreado()) {
        BOOM("No se puede aumentar el contador porque todavía no creaste el contador.")
    }
    IrAlBorde(Este)
    Poner(Negro)
    IrAlBorde(Oeste)
}

function aux_álbumCreado() {
    Mover(Sur)
    return (hayBolitas(Verde))
}

function aux_contadorCreado() {
    IrAlBorde(Este)
    return (hayBolitas(Azul))
}

function aux_hayFigu() {
    Mover(Este)
    Mover(Este)
    return (hayBolitas(Verde))
}

/*@ATTRIBUTE@block_name@falta figu en álbum@*/
function faltaFiguEnÁlbum() {
    return (not álbumCompleto())
}

function álbumCompleto() {
    Mover(Sur)
    completo := aux_tengoEstaFigu()
    while(completo && puedeMover(Este)) {
        Mover(Este)
        completo := completo && aux_tengoEstaFigu()
    }
    return (completo)
}

function aux_tengoEstaFigu() {
    return (nroBolitas(Azul) == 0)
}

function aux_esFiguRepetida() {
    if (not aux_hayFigu()) {
        BOOM("No tenés ninguna figu para preguntar. Primero comprá alguna.")
    }
    if (not aux_álbumCreado()) {
        BOOM("No se puede verificar si la figu es repetida porque todavía no creaste el álbum.")
    }
    Mover(Este)
    Mover(Este)
    n := nroBolitas(Verde)
    Mover(Oeste)
    Mover(Oeste)
    Mover(Sur)
    repeat(n-1) {
        Mover(Este)
    }
    return (aux_tengoEstaFigu())
}
